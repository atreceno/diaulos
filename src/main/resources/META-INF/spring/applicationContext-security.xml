<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	<!-- HTTP security configurations -->
	<http auto-config="true" use-expressions="true">
		<form-login login-processing-url="/resources/j_spring_security_check" login-page="/login" authentication-failure-url="/login?login_error=t" />
		<logout logout-url="/resources/j_spring_security_logout" />
		<!-- Configure these elements to secure URIs in your application (the order matters) -->
		<intercept-url pattern="/login/**" access="permitAll" />
		<intercept-url pattern="/resources/**" access="permitAll" />
        <intercept-url pattern="/users" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/roles" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/**" method="PUT" access="hasAnyRole('ROLE_ADMIN','ROLE_MANAGER')" />
        <intercept-url pattern="/**" method="POST" access="hasAnyRole('ROLE_ADMIN','ROLE_MANAGER')" />
        <intercept-url pattern="/**" method="DELETE" access="hasAnyRole('ROLE_ADMIN','ROLE_MANAGER')" />
		<intercept-url pattern="/**" method="GET" access="isAuthenticated()" />
		<intercept-url pattern="/**" access="hasRole('ROLE_ADMIN')" />
	</http>
	<!-- Configure Authentication mechanism -->
	<authentication-manager alias="authenticationManager">
		<!-- SHA-256 values can be produced using 'echo -n your_desired_password | sha256sum' (using normal *nix environments) -->
		<authentication-provider>
			<password-encoder hash="sha-256" />
			<jdbc-user-service data-source-ref="dataSource" users-by-username-query="select username, password, enabled from user where username = ?"
				authorities-by-username-query="select u.username, r.name from user u, role r, user_roles ur where u.id = ur.users and r.id = ur.roles and u.username = ?" />
		</authentication-provider>
		<authentication-provider>
			<password-encoder hash="sha-256" />
			<user-service>
				<user name="admin" password="d417a32def5666de310c785e770ded20cca348fa403b3e2c49b187d2e79cf19d" authorities="ROLE_ADMIN" />
				<user name="user" password="d417a32def5666de310c785e770ded20cca348fa403b3e2c49b187d2e79cf19d" authorities="ROLE_USER" />
			</user-service>
		</authentication-provider>
	</authentication-manager>
</beans:beans>